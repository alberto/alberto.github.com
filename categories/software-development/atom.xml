<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: software development | sharp bites]]></title>
  <link href="http://www.sharpbites.com/categories/software-development/atom.xml" rel="self"/>
  <link href="http://www.sharpbites.com/"/>
  <updated>2012-03-03T21:30:34+01:00</updated>
  <id>http://www.sharpbites.com/</id>
  <author>
    <name><![CDATA[alberto]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Writing Better Object Oriented Code]]></title>
    <link href="http://www.sharpbites.com/2010/11/30/writing-better-object-oriented-code/"/>
    <updated>2010-11-30T00:00:00+01:00</updated>
    <id>http://www.sharpbites.com/2010/11/30/writing-better-object-oriented-code</id>
    <content type="html"><![CDATA[<div class='post'>
<a href="http://twitter.com/#!/gregyoung">Greg Young</a> did a great presentation at <a href="http://www.oredev.org/">Oredev</a> about <a href="http://vimeo.com/17151526">writing Object Oriented code the right way</a>. It's so full of good stuff I could not bother to make a summary out of it. Go watch the original video. Now.</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I've read: Peopleware]]></title>
    <link href="http://www.sharpbites.com/2010/11/26/ive-read-peopleware/"/>
    <updated>2010-11-26T00:00:00+01:00</updated>
    <id>http://www.sharpbites.com/2010/11/26/ive-read-peopleware</id>
    <content type="html"><![CDATA[<div class='post'>
'Peopleware' is one of those classic books of our profession, a must-read. Unfortunately, it's not easy to grab a copy of it on the stores (it may have been discontinued, I'm not sure).&nbsp;After a failed attempt to borrow it from <a href="http://twitter.com/jmbeas">Jose Manuel Beas</a>,&nbsp;a few weeks ago, I finally got the chance to read it (thanks <a href="http://twitter.com/rubenbpv">Rub√©n</a>!).<br /><br />All I can say is, if you have the chance, read it! Just so you can have a glimpse at it, here are some notes I&nbsp;took from it. Most are direct quotes,&nbsp;although&nbsp;I reworded a few to&nbsp;synthesize.<br /><br /><span class="Apple-style-span" style="font-size: large;">Productivity</span><br /><span class="Apple-style-span" style="font-size: large;"><span class="Apple-style-span" style="font-size: small;">As long as workers are crowded into noisy, disruptive space, it's not worth improving anything but the workspace.</span></span><br />Experiments showed projects without deadlines had the best productivity.<br />Better performance can be explained entirely by more effective ways of handling people, modifying the workplace and corporate culture.<br />Developers main work is human communication to organize the user's expressions of needs into formal procedure.<br />People won't work better under a lot of pressure.<br />The manager's function is not to make people work, but to make it possible for people to work.<br />Best people outperform the worst by 10 and the median performer by 2.5.<br />Years of experience are not correlated to productivity.<br />Interrupting flow not only causes disruption but frustration.<br />There are two types of work: Individual work is noise sensitive and needs flow.&nbsp;Group work is noise producing. Adapt your workspace to make both kinds of work possible.<br />Measure and try to maximize flow time, but don't let managers access to data.<br />Ignoring the phone must be accepted by corporate policy.<br />Ask people about their workspace conditions, what affects their productivity.<br />Listening to music uses the right part of the braing, which is responsible for creativity.<br />Encourage teams to customize their space.<br /><br /><span class="Apple-style-span" style="font-size: large;">People</span><br />People who work for you will be more or less the same at the end as they were at the beginning, so they better be right for the job from the start.<br />Find the right people, make them happy, turn them loose.<br />Success or failure is in the cards from the moment the team is formed and the initial directions set out.<br />Corporate pressure is pushing towards the company average, encouraging you to hire people that look, sound and think like everybody else.<br /><br /><span class="Apple-style-span" style="font-size: large;">Hiring</span><br />(Tell about hiring a juggler) 'Don't you want to see me juggle?'<br />Make people bring their code portfolio for interviews.<br />Make candidates prepare an audition with the team 10-to-15 minute presentation on some aspect of past work.<br /><br /><span class="Apple-style-span" style="font-size: large;">Good organizations</span><br />Late promotion is a sign of health.<br />With a low and flat hierarchy, people at the lowest level have, on average more years of experience.<br />Strive to be the best<br />Grow a community feeling.<br />Focus on long term benefits.<br />Widespread sense that you are expected to stay<br />Invest in personal growth<br />Retrain your people<br />When you automate a system, you make it deterministic, so it looses its self-healing ability. A&nbsp;<b>M</b>ethodology (capital 'M' here) can produce the same results on you organization.<br />To achieve convergence of methods, use training, tools and peer review.<br />Don't declare something a standard until it is a de facto standard.<br />Hawtorne effect (experiment of raising and lowering the light) People perform better when they are trying something new.<br />You have to make non-standard approaches to the rule. Whatever standard there is should be brief and gentle.<br />Let a hundred flowers blossom and let a hundred schools of thought contend. (Mao Tse-tung)<br /><br /><span class="Apple-style-span" style="font-size: large;">Jelled teams</span><br />Productive teams = challenge + team interaction<br />They have momentum.<br />They have a goal<br />The purpose of a team is not goal attainment but goal achievement.<br />People on jelled teams are often so involved you have to remind them&nbsp;that what they are trying to accomplish is not winning a war.<br />Jelled teams have low turnover and strong sense of identity.<br />Money, status and position for advance matter a lot less. Enjoyment is an obvious sign.<br />You can't make teams jell, just act to improve the odds.<br />Teamicide techniques:<br /><br /><ul><li>Defensive management</li><li>Bureaucracy</li><li>Physical&nbsp;separation</li><li>Fragmentation of people's time</li><li>Quality reduction</li><li>Phony deadlines</li><li>Clique control</li></ul><br />Good managers provide opportunities for the team to succeed together. The best success is the one in which there is no evident management. The best boss is the one who can manage without the team knowing they've been managed.<br /><br />Growing jelled teams:<br /><br /><ul><li>Give people autonomy and responsibility</li><li>Let them work alone, without constant supervision</li><li>They break the rules when they believe in it</li><li>Let them choose mates and projects</li><li>Let them exercise their natural authority in their area of expertise.</li></ul><br />Chemistry for team formation:<br /><br /><ul><li>Make a cult of quality</li><li>Provide satisfying confirmation</li><li>Build a sense of eliteness</li><li>Allow and encourage heterogeneity</li><li>Preserve and protect successful teams.</li><li>Provide strategic but not tactical direction</li></ul><br /><br /><span class="Apple-style-span" style="font-size: large;">Chaos (it is not that bad!)</span><br />Small amounts of disorder are benefitial<br />Pilot projects, war games, brainstorming, provocative training experiences, training, trips, conferences, celebrations, retreats,...<br /><br />If your corporation is fortunate enough to have a self-motivated superachiever on-board, it's enough to say "Define your own job"<br />"Free electrons" have a strong role in choosing their own orbits.<br /><br /><span class="Apple-style-span" style="font-size: large;">Being a Change Agent</span><br />Focus on one thing to change. Raise people's consciousness of it, so they help you change it.<br />Be careful with motivational posters, they can have the opposite effect.<br />Fuck overtime.<br />Competition inhibits coaching.<br />Any action that rewards team members differently is likely to foster competition.<br />The success of the individual should be tied to the success of the whole.<br />People hate change. Any change.<br />Your enemies are blindly loyals and militantly opposed to change.<br />The fundamental response to change is not logical, but emotional.<br />Celebrate the old as a way to help make change happen.<br />Be aware that chaos is an integral part of change. Otherwise, you mistake it for the new status quo and will want to change back.<br />Change always involves chaos, it is necessary and can't be shortcut. The more painful the chaos, the greater the perceived value of the new status quo.<br />Change won't even get started unless people feel safe when they know they won't be demeaned for proposing or trying a change.<br />Change only has a chance of&nbsp;succeeding&nbsp;if failure is also&nbsp;OK.<br /><br /><span class="Apple-style-span" style="font-size: large;">Organizational learning</span><br />Learning is limited by an organization's ability to keep its people.<br />If the retrained people leave, investment is lost and learning is gone.<br />Successful&nbsp;learning organizations are always characterized by strong middle management. In order for a vital learning center to form, middle managers must communicate with each other and learn to work together in effective harmony.<br /><br /><span class="Apple-style-span" style="font-size: large;">Waste</span><br />The ultimate management sin is wasting people's time.<br />Organizations have need of ceremony.<br />Ceremony is good when it fulfills a need for appreciation by the team.<br />Early&nbsp;over-staffing&nbsp;is waste.<br />Fragmented time is waste, it breaks flow.<br /><br /><span class="Apple-style-span" style="font-size: large;">Community</span><br />Building a community makes a difference, but requires talent, courage and creativity. And an enormous invest of time, to be, at best, the catalyst.</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The road to Continuous Integration. Part 1: Get your source under control!]]></title>
    <link href="http://www.sharpbites.com/2009/09/11/road-to-continuous-integration-part-1/"/>
    <updated>2009-09-11T00:00:00+02:00</updated>
    <id>http://www.sharpbites.com/2009/09/11/road-to-continuous-integration-part-1</id>
    <content type="html"><![CDATA[<div class='post'>
<p><a href="http://lh6.ggpht.com/_kQ7iivKjVno/Sqq2s0-EiHI/AAAAAAAAAL0/DFQJE0sWIhc/s1600-h/timemachine6.jpg"><img style="border-right-width: 0px; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" border="0" alt="time-machine" align="right" src="http://lh3.ggpht.com/_kQ7iivKjVno/Sqq2tpkGKTI/AAAAAAAAAL4/g1pf0RP_k7Q/timemachine_thumb6.jpg?imgmax=800" width="115" height="115" /></a> If you are not already doing so, put your stuff under source control. Right now. It doesn't matter how small your project is or whether you are working alone. If it's worth your time, it's worth putting it under source control. </p>  <h4>What is Source Control?</h4>  <p>Source control, often referred to as VCS (Version Control System) or SCM (Source Code Management) is the management of changes in files. It's a time machine that lets you see how your project looked like at any given point in time.</p>  <p>For a more detailed introduction, see <a href="http://www.ericsink.com/scm/source_control.html">Eric Sink's Source Control HOWTO</a> or the <a href="http://svnbook.red-bean.com/nightly/en/index.html">SVN book</a>.</p>  <h4>Why you should use a SCM tool</h4>  <p>It gives you an infinite undo-button. No matter how much you have screwed up, you can always go back to a stable point.</p>  <p>You can share code with other people.</p>  <p>You can keep track of your changes over time. This allows you to know who changed what, when and (luckily, if you use meaningful comments) why.</p>  <p>You can maintain multiple code bases of your software. Even if you only have one active version at a time, it's useful to start new development independently.</p>  <h4>What should you store?</h4>  <p>Everything you need to build your product. That includes your sources, of course, but also any libraries your projects depends on (avoid referencing GAC'ed or installed libraries), any tools you use and any scripts that you need as part of the process. Nothing should be dependent of your machine installation.</p>  <p>The goal is to be able to get into a clean machine, get a copy of the codebase from your source repository, build it (automatically) and voil&#224;, you are done and ready to start working!</p>  <h4>WHICH SCM ARE YOU?</h4>  <p><a href="http://subversion.tigris.org/">There</a> <a href="http://www.git-scm.org/">are</a> <a href="http://www.selenic.com/mercurial/">many</a> <a href="http://bazaar-vcs.org/">alternatives</a>, just pick one, (oh well, <a href="http://www.codinghorror.com/blog/archives/000660.html">not THAT one</a>). If you don't want to set up and maintain a server, you can use <a href="http://code.google.com/">one</a> <a href="http://sourceforge.net">of</a> <a href="http://www.assembla.com">the</a> <a href="http://github.com/">many</a> <a href="http://bitbucket.org/">online</a> <a href="http://www.launchpad.net">services</a> <a href="http://www.codeplex.com">available</a> (some of them are just for open source projects, and some have free and paid plans). Which one is best will depend on your specific needs:</p>  <h5>If you...</h5>  <ul>   <li>want an easy to install, easy to start tool -&gt; svn </li>    <li>want a powerful tool, at the expense of a bit steeper learning curve -&gt; git, mercurial, bazaar </li>    <li>need to use a mature GUI/integration with Visual Studio -&gt; svn, tfs </li>    <li>need good branching and merging support -&gt; git, mercurial, bazaar </li>    <li>need an all-in-one tool (source control, bug tracking system, continuous integration) completely integrated, even if the individual tools are not-so-great for the -&gt; tfs </li>    <li>are a Microsoft-only shop -&gt; tfs </li> </ul>  <p>For the clients there are also a myriad of tools available for all platforms. You have command-line interfaces, standalone GUI tools (<a href="http://tortoisesvn.net/">tortoisesvn</a>, <a href="http://bitbucket.org/tortoisehg/stable/wiki/Home">tortoisehg</a>, <a href="http://code.google.com/p/tortoisegit/">tortoisegit</a>) and IDE integrated (<a href="http://www.visualsvn.com/">VisualSVN</a>, <a href="http://ankhsvn.open.collab.net/">AnhkSVN</a>, <a href="http://code.google.com/p/gitextensions/">Git Extensions</a>).</p>  </div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The road to continuous integration]]></title>
    <link href="http://www.sharpbites.com/2009/09/01/road-to-continuous-integration/"/>
    <updated>2009-09-01T00:00:00+02:00</updated>
    <id>http://www.sharpbites.com/2009/09/01/road-to-continuous-integration</id>
    <content type="html"><![CDATA[<div class='post'>
<p><img style="border-bottom: 0px; border-left: 0px; border-top: 0px; border-right: 0px" border="0" alt="road" align="right" src="http://lh6.ggpht.com/_kQ7iivKjVno/Ssd0pucIX_I/AAAAAAAAAMM/KxJlsxekJj8/carretera%5B1%5D.jpg?imgmax=800" width="244" height="177" /> After my introductory post in the <a href="http://sharpbites.blogspot.com/2009/08/introducing-altnerddinner.html">AltNerdDinner</a> series, I thought it would be a good idea to roll out an independent series of posts about the things I have learnt in the past two years on setting up a code base for continuous integration. Nothing really new under the sun, but it might help a few people to get started.    <br />I will update this post with links backs to each element of the series.    <br /><a href="http://sharpbites.blogspot.com/2009/09/road-to-continuous-integration-part-1.html">Part 1: Get your source under control</a></p>  <p><a href="http://sharpbites.blogspot.com/2009/09/road-to-continuous-integration-part-2.html">Part 2: Shake your tree</a></p>  <p><a href="http://sharpbites.blogspot.com/2009/09/road-to-continuous-integration-part-3.html">Part 3: Script it, build it, test it, break it, fix it. Commit it</a></p>  </div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[It's the people, stupid!]]></title>
    <link href="http://www.sharpbites.com/2009/08/15/its-people-stupid/"/>
    <updated>2009-08-15T00:00:00+02:00</updated>
    <id>http://www.sharpbites.com/2009/08/15/its-people-stupid</id>
    <content type="html"><![CDATA[<div class='post'>
<blockquote>You need people who are passionate about what they do. People who care about their craft ‚Äî and actually think of it as a craft. People who take pride in their work, regardless of the monetary reward involved. People who sweat the details even if 95% of folks don't know the difference. People who want to build something great and won't settle for less. [...]Anyhow, when you find those people, hold onto them. In the end, the folks on your team will make or break your project ‚Äî and your company.<br /><cite>- <a href="http://gettingreal.37signals.com/">Getting Real</a>, <a href="http://www.37signals.com/">37signals</a></cite></blockquote></div>

]]></content>
  </entry>
  
</feed>
