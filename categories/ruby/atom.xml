<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | sharp bites]]></title>
  <link href="http://www.sharpbites.com/categories/ruby/atom.xml" rel="self"/>
  <link href="http://www.sharpbites.com/"/>
  <updated>2013-04-27T09:38:39+02:00</updated>
  <id>http://www.sharpbites.com/</id>
  <author>
    <name><![CDATA[alberto]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[An introduction to the ruby ecosystem for noobies]]></title>
    <link href="http://www.sharpbites.com/2012/07/02/an-introduction-to-the-ruby-ecosystem-for-noobies/"/>
    <updated>2012-07-02T20:08:00+02:00</updated>
    <id>http://www.sharpbites.com/2012/07/02/an-introduction-to-the-ruby-ecosystem-for-noobies</id>
    <content type="html"><![CDATA[<p>Here is a short introductory video to some useful tools to develop in ruby.
It covers homebrew, pow, rvm, bundler and pry.
<iframe width="640" height="510" src="http://www.youtube.com/embed/GtB6cwgm2fE " frameborder="0" allowfullscreen></iframe></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails.start 1.month.ago]]></title>
    <link href="http://www.sharpbites.com/2012/03/04/rails-start-1-month-ago/"/>
    <updated>2012-03-04T04:10:00+01:00</updated>
    <id>http://www.sharpbites.com/2012/03/04/rails-start-1-month-ago</id>
    <content type="html"><![CDATA[<p>It has been one month since I started doing ruby and Rails at work, so I
 thought I'd share my experiences so far.</p>

<p>Here's a list of the things I've had to deal with this month:</p>

<ul>
<li>git</li>
<li>ruby</li>
<li>rails</li>
<li>rvm</li>
<li>rubygems</li>
<li>bundler</li>
<li>homebrew</li>
<li>rspec</li>
<li>cucumber</li>
<li>capybara</li>
<li>guard</li>
<li>spork</li>
<li>jenkins</li>
<li>log4r</li>
<li>rest-client</li>
<li>delayed_job</li>
<li>rake</li>
<li>capistrano</li>
<li>foreman</li>
<li>daemons</li>
</ul>


<p>You can tell I've been busy :D.</p>

<h2>References</h2>

<p>Here are some resources I've found useful in my journey so far.</p>

<h3>Rails</h3>

<ul>
<li><a href="http://ruby.railstutorial.org/ruby-on-rails-tutorial-book?version=3.2">Ruby on Rails Tutorial</a>, an awesome introductory book for Rails. It teaches you about many of the things in the list above.</li>
</ul>


<h3>Ruby</h3>

<ul>
<li><p><a href="http://www.amazon.co.uk/gp/product/1934356085/ref=as_li_qf_sp_asin_tl?ie=UTF8&tag=wwwsharpbites-21&linkCode=as2&camp=1634&creative=6738&creativeASIN=1934356085">Programming Ruby 1.9</a><img src="http://www.assoc-amazon.co.uk/e/ir?t=wwwsharpbites-21&l=as2&o=2&a=1934356085" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />. <strong>The ruby book</strong>.
For those who want to gain in-depth knowledge of the language.</p></li>
<li><p>For hands-on ruby learning, try <a href="http://rubykoans.com/">rubykoans</a> and <a href="http://rubymonk.com/">rubymonk</a>.
They are interactive online tutorials guiding you in the inners of ruby.</p></li>
</ul>


<h3>TDD</h3>

<ul>
<li><a href="http://www.amazon.co.uk/gp/product/1934356379/ref=as_li_tf_tl?ie=UTF8&tag=wwwsharpbites-21&linkCode=as2&camp=1634&creative=6738&creativeASIN=1934356379">The RSpec Book</a><img src="http://www.assoc-amazon.co.uk/e/ir?t=wwwsharpbites-21&l=as2&o=2&a=1934356379" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />. A
must read. It teaches you how to do BDD/TDD right. Totally recommended even if you don't program in ruby.</li>
</ul>


<h3>Git</h3>

<ul>
<li>If you are new to git, I recommend you to read <a href="http://progit.org/book/">Pro Git</a>.</li>
<li>For a more reference to-the-point style, check <a href="http://gitref.org/">Git Reference</a></li>
<li>Finally, for a learn-by-example guide, visit <a href="http://gitimmersion.com/">Git immersion</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up a ruby testing environment on Linux]]></title>
    <link href="http://www.sharpbites.com/2011/01/29/setting-up-ruby-testing-environment-on/"/>
    <updated>2011-01-29T00:00:00+01:00</updated>
    <id>http://www.sharpbites.com/2011/01/29/setting-up-ruby-testing-environment-on</id>
    <content type="html"><![CDATA[<div class='post'>
Now that <a href="http://www.sharpbites.com/2011/01/setting-up-your-ruby-environment-on.html">we have setup our ruby environment on Linux</a>,&nbsp;we are going to create a setup for testing purposes by adding some useful gems.<br /><br />For that, we will use a feature from <a href="http://rvm.beginrescueend.com/">rvm</a> called&nbsp;<a href="http://rvm.beginrescueend.com/gemsets/basics/">gemsets</a>. A gemset is an independent setup for your environment. That means you can have many environments with a different set of gems (hence the name) installed independently on each one (even with different ruby versions).<br /><br />Usually, when working on a project, you would create a gemset specific for that project, but in this case, we are going to create a gemset for practicing tdd, doing katas, coderetreats, etc. If you plan to use rvm in a serious project (which you should), please read first about <a href="http://rvm.beginrescueend.com/rvm/best-practices/">rvm best practices</a>.<br /><br /><span class="Apple-style-span" style="font-size: large;">A brief introduction to gemsets</span><br />For each version of ruby, rvm creates two gemsets, the default, empty gemset and the global gemset. You can list your gemsets with:<br /><blockquote>rvm gemset list</blockquote>Gems that are installed to the @global gemset are shared to all other gemset for that ruby. We won't install anything here. Instead we will create our own gemset and put everything there.<br /><br />Create a tdd gemset:<br /><blockquote>rvm gemset create tdd</blockquote>Switch to that gemset:<br /><blockquote>rvm use gemset 1.9.2@tdd</blockquote>If you want to make this your default gemset (the one that will be loaded by default) you can do that by doing:<br /><blockquote>rvm use gemset 1.9.2@tdd --default</blockquote>Verify you are on the new gemset:<br /><blockquote>rvm gemset name</blockquote>You should get:<br /><blockquote>tdd</blockquote><span class="Apple-style-span" style="font-size: large;">Gems for testing that rock</span><br />You can install gems <b>for your current gemset</b> using:<br /><blockquote>gem install</blockquote><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">To do unit testing in ruby, <a href="http://relishapp.com/rspec">rspec</a> is a great choice.<br /><blockquote>gem install&nbsp;rspec</blockquote><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">To start using it, create an rspec file, like example_spec.rb inside a spec folder on the root of your project:</div><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"><span class="Apple-style-span" style="color: #222222; font-family: 'Helvetica Neue', Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;"></span></div><pre style="background-color: #e0f8e0; border-bottom-width: 1px; border-color: initial; border-left-color: rgb(8, 138, 8); border-left-width: 1px; border-right-color: rgb(8, 138, 8); border-right-width: 1px; border-style: initial; border-top-color: rgb(8, 138, 8); border-top-style: solid; border-top-width: 1px; font-family: inherit; font-style: inherit; font-weight: inherit; margin-bottom: 8px; margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-bottom: 2px; padding-left: 5px; padding-right: 5px; padding-top: 2px; vertical-align: baseline; white-space: pre;"><span class="Apple-style-span" style="color: #222222; font-family: 'Helvetica Neue', Arial, Helvetica, sans-serif; font-size: 14px; line-height: 21px;">describe "something" do<br />  it "does something that passes" do<br />    5.should eq(5)<br />  end<br /></span></pre><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">You can then execute it by running:</div><blockquote><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">rspec spec/</div></blockquote><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">For a nicer, colored output, pass in the --colour flag to rspec</div><blockquote><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">rspec spec/ --colour&nbsp;</div></blockquote><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">Or create a .rspec config file&nbsp;on your project root (or in your home dir if you want to always use it), to tell rspec to use the colored output by default</div><blockquote><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">echo "--colour" &gt;&gt; .rspec</div></blockquote><br /><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">Excecuting rspec by hand all the time gets boring quickly, and it turns out computers are quite good at doing tasks repeteadly, so you can instead use <a href="http://ph7spot.com/musings/getting-started-with-autotest">autotest</a>, a cool gem from the <a href="http://www.zenspider.com/ZSS/Products/ZenTest/">ZenTest suite</a>&nbsp;that will automagically execute your tests when you save your files.</div><blockquote>gem install autotest</blockquote><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">Execute it from your project root.</div><blockquote><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">autotest --style rspec2 --quiet</div></blockquote><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">The --style flag tells autotest to look for rspec kind of tests. The --quiet flag removes a bit of noise you probably don't care about.</div><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"><br /></div><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">If you have created the .rpec file on your project root, you can omit the style flag and autotest will still find the tests.</div><blockquote><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">autotest --quiet</div></blockquote>If you are really lazy like me, you can instruct autotest to be quiet by default by creating a .autotest file in your home:<br /><blockquote>echo "Autotest.options[:quiet] = true" &gt;&gt; ~/.autotest</blockquote>So whatever option you want to use, let's try it.&nbsp;Modify your rspec file and save it. Awesome, isn't it? But wait,&nbsp;there is more!<br /><br />We'll add a nice gem called <a href="https://github.com/fnando/test_notifier">test_notifier</a>.&nbsp;This is the topping of the cake. It will notify your OS with the result of your tests.<br /><br />In order to it on GNOME, we will need to install libnotify:<br /></div><blockquote>sudo apt-get install libnotify-bin</blockquote><blockquote>gem install test_notifier</blockquote>Configure autotest to use test_notifier:<br /><blockquote>echo 'require "test_notifier/runner/autotest"' &gt;&gt; .autotest</blockquote>Or add the following to your rspec/spec_helper file if you want to use it directly with rspec:<br /><blockquote>require "test_notifier/runner/spec"</blockquote>Now you should get a nice notification when you save your file.<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/_kQ7iivKjVno/TUSNLUgyTcI/AAAAAAAAARA/zA_zkMV45dk/s1600/test_notifier.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="138" src="http://1.bp.blogspot.com/_kQ7iivKjVno/TUSNLUgyTcI/AAAAAAAAARA/zA_zkMV45dk/s320/test_notifier.png" width="320" /></a></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up your ruby environment on Linux]]></title>
    <link href="http://www.sharpbites.com/2011/01/25/setting-up-your-ruby-environment-on/"/>
    <updated>2011-01-25T00:00:00+01:00</updated>
    <id>http://www.sharpbites.com/2011/01/25/setting-up-your-ruby-environment-on</id>
    <content type="html"><![CDATA[<div class='post'>
Here are the instructions on how to set up a ruby environment for Linux, in case you want to start playing with it.<br /><br /><b>NOTE:</b> Don't use the packages from your distribution. They are outdated and will cause more harm than good. Use one of the methods below.<br /><br /><span class="Apple-style-span" style="font-size: large;">The quick and easy way</span><br />If you are planning to use Rails anyways, you can use the script from <a href="https://github.com/joshfng/railsready">railsready</a>.<br />It will install rails, passenger, and a shitload dependencies it need for everything to work smoothly.<br />You can install it by running:<br /><blockquote>sudo wget --no-check-certificate https://github.com/joshfng/railsready/raw/master/railsready.sh &amp;&amp; bash railsready.sh</blockquote>The script will ask if you want to build Ruby from source or install RVM.&nbsp;Choose RVM.<br /><br />It will download around 50MB of libraries from the repositories and then download and compile rvm, ruby and download again some other gems, so it will take some time. Don't worry, you don't have to do anything, just wait.<br /><br /><span class="Apple-style-span" style="font-size: large;">The almost-as-quick, almost-as-easy way</span><br />If you don't intend to use rails and don't feel like installing all that stuff, use the following method. It's basically doing the same thing as the previous script, except you don't need so many dependencies, and you won't install rails or passenger.<br /><br /><b>Installing RVM</b><br /><br /><a href="http://rvm.beginrescueend.com/">RVM</a> (Ruby Version Manager)&nbsp;is a tool which allows us to easily install, manage and work with multiple ruby environments (interpreters and gems) on the same machine. This means we can create different environments with distincts versions, of ruby, rails, or whatever gem we want, without any headaches.<br /><div><br /></div><div><div>In order to install rvm, you'll need curl, git and some compiler tools. We can get them with the following command:</div><blockquote>sudo apt-get install git-core curl build-essential</blockquote></div><div><div>To install rvm execute:</div><blockquote>bash &lt; &lt;( curl http://rvm.beginrescueend.com/releases/rvm-install-head )</blockquote></div><div><div>This command will install rvm in your home directory.</div></div><div>You need to include a line at the end of the .bashrc file to tell it to load rvm.</div><div>Follow carefuly the instructions on your terminal, specially the part about converting the return to an if statement</div><blockquote>"[ -z "$PS1" ] &amp;&amp; return"</blockquote><div><b>NOTE:</b> The railsready script doesn't do this, and just appends the line loading rvm at the end of the file. RVM maintainers recommend otherwise, so you better do it their way.</div><div><br /></div><div>If you find any problems, check <a href="http://rvm.beginrescueend.com/rvm/install/">rvm site troubleshooting information</a>&nbsp;(section 'Trhoubleshooting your install')</div><div><div><br /></div><div>Finally reload your envirnonment executing:</div><blockquote>source ~/.bashrc</blockquote></div><div><b>Installing ruby</b></div><div><div>Now you have rvm installed and running, you can proceed to install ruby. You'll need some packages first, the following command will tell you which:</div><blockquote>rvm notes</blockquote></div>In my case, these were:<br /># For Ruby (MRI &amp; ree) &nbsp;you should install the following OS dependencies:<br /><blockquote>sudo apt-get install build-essential bison openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf</blockquote><div><div>Now, we can install ruby 1.9.2:</div><blockquote>rvm install 1.9.2</blockquote><div>This will take a while, since it is dowloading ruby sources and compiling them.</div><div><br /></div><div>You can check ruby is all fine and dandy by running</div><blockquote>ruby -v</blockquote><div>You should get something similar to:</div><blockquote>ruby 1.9.2p136 (2010-12-25 revision 30365) [x86_64-linux]</blockquote>On the next post I will explain how to setup your environment for testing using rvm.</div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Greed game koan]]></title>
    <link href="http://www.sharpbites.com/2010/12/20/greed-game-koan/"/>
    <updated>2010-12-20T00:00:00+01:00</updated>
    <id>http://www.sharpbites.com/2010/12/20/greed-game-koan</id>
    <content type="html"><![CDATA[<div class='post'>
<a href="http://twitter.com/jjballano">@jjballano</a>&nbsp;recently&nbsp;<a href="https://gist.github.com/736614">posted</a>&nbsp;his version of the <a href="http://en.wikipedia.org/wiki/Greed_(dice_game)">Greed game</a>, as part of his learning experience with <a href="http://rubykoans.com/">Ruby Koans</a>. As I am following that very same path, I thought it could also be worth for me to share <a href="https://gist.github.com/747881">my implementation of Greed</a> for people to comment on it.<br /><br /><div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;">The code could surely be much prettier since I am still trying to get my head around ruby block-passing, among others, so comments (and patches!) are welcome.</div><div><br /></div><br /><script src="https://gist.github.com/747881.js?file=score.rb"></script><br /><br />UPDATE: The code seems to update automatically to the latest version on github, you can find the original <a href="https://gist.github.com/747881/3b8cb77970b0b22b2265904b3c02acf7bae84a3f#file_score.rb">here</a>.</div>

]]></content>
  </entry>
  
</feed>
